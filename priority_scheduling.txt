#include <stdio.h>

void priorityScheduling(int n, int bt[], int priority[], int at[]) {
    int wt[n], tat[n], ct[n];
    float total_wt = 0, total_tat = 0;

    // Initialize completion time
    for (int i = 0; i < n; i++) {
        ct[i] = 0;
    }

    int time = 0, completed = 0;
    while (completed < n) {
        int highest_priority = -1, selected_process = -1;
        for (int i = 0; i < n; i++) {
            if (at[i] <= time && ct[i] == 0 && priority[i] > highest_priority) {
                highest_priority = priority[i];
                selected_process = i;
            }
        }

        if (selected_process == -1) {
            time++;
            continue;
        }

        // Process selected
        ct[selected_process] = time + bt[selected_process];
        tat[selected_process] = ct[selected_process] - at[selected_process];
        wt[selected_process] = tat[selected_process] - bt[selected_process];
        total_wt += wt[selected_process];
        total_tat += tat[selected_process];
        completed++;
    }

    printf("Process\tBurst Time\tPriority\tArrival Time\tCompletion Time\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d\n", i + 1, bt[i], priority[i], at[i], ct[i], wt[i], tat[i]);
    }

    printf("Average Waiting Time: %.2f\n", total_wt / n);
    printf("Average Turnaround Time: %.2f\n", total_tat / n);
}

int main() {
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int burst_time[n], priority[n], arrival_time[n];
    printf("Enter the burst times, priorities, and arrival times of the processes:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d %d %d", &burst_time[i], &priority[i], &arrival_time[i]);
    }

    priorityScheduling(n, burst_time, priority, arrival_time);

    return 0;
}
